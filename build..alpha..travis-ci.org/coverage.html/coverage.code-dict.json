{"/home/travis/build/npmtest/node-npmtest-rollup-plugin-babel/test.js":"/* istanbul instrument in package npmtest_rollup_plugin_babel */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-rollup-plugin-babel/lib.npmtest_rollup_plugin_babel.js":"/* istanbul instrument in package npmtest_rollup_plugin_babel */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_rollup_plugin_babel = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_rollup_plugin_babel = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-rollup-plugin-babel/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-rollup-plugin-babel && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_rollup_plugin_babel */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_rollup_plugin_babel\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_rollup_plugin_babel.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_rollup_plugin_babel.rollup.js'] =\n            local.assetsDict['/assets.npmtest_rollup_plugin_babel.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_rollup_plugin_babel.__dirname + '/lib.npmtest_rollup_plugin_babel.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-rollup-plugin-babel/node_modules/rollup-plugin-babel/dist/rollup-plugin-babel.cjs.js":"'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar path = require('path');\nvar babelCore = require('babel-core');\nvar rollupPluginutils = require('rollup-pluginutils');\nvar classes = _interopDefault(require('babel-plugin-transform-es2015-classes'));\n\nfunction assign ( target, source ) {\n\tObject.keys( source ).forEach( function (key) {\n\t\ttarget[ key ] = source[ key ];\n\t});\n\treturn target;\n}\n\nvar warned = {};\nfunction warnOnce ( warn, msg ) {\n\tif ( warned[ msg ] ) { return; }\n\twarned[ msg ] = true;\n\twarn( msg );\n}\n\nvar INLINE = {};\nvar RUNTIME = {};\nvar BUNDLED = {};\n\nvar HELPERS = '\\0babelHelpers';\n\nvar preflightCheckResults = {};\n\nfunction preflightCheck ( options, dir ) {\n\tif ( !preflightCheckResults[ dir ] ) {\n\t\tvar helpers;\n\n\t\toptions = assign( {}, options );\n\t\tdelete options.only;\n\t\tdelete options.ignore;\n\n\t\toptions.filename = path.join( dir, 'x.js' );\n\n\t\toptions.plugins = options.plugins ? options.plugins.concat( classes ) : [ classes ];\n\n\t\tvar check = babelCore.transform( 'export default class Foo {}', options ).code;\n\n\t\tif ( !~check.indexOf( 'export default' ) && !~check.indexOf( 'export { Foo as default }' ) ) { throw new Error( 'It looks like your Babel configuration specifies a module transformer. Please disable it. See https://github.com/rollup/rollup-plugin-babel#configuring-babel for more information' ); }\n\n\t\tif ( ~check.indexOf( 'import _classCallCheck from' ) ) { helpers = RUNTIME; }\n\t\telse if ( ~check.indexOf( 'function _classCallCheck' ) ) { helpers = INLINE; }\n\t\telse if ( ~check.indexOf( 'babelHelpers' ) ) { helpers = BUNDLED; }\n\n\t\telse {\n\t\t\tthrow new Error( 'An unexpected situation arose. Please raise an issue at https://github.com/rollup/rollup-plugin-babel/issues. Thanks!' );\n\t\t}\n\n\t\tpreflightCheckResults[ dir ] = helpers;\n\t}\n\n\treturn preflightCheckResults[ dir ];\n}\n\nvar keywordHelpers = [ 'typeof', 'extends', 'instanceof' ];\n\nfunction babel ( options ) {\n\toptions = assign( {}, options || {} );\n\tvar inlineHelpers = {};\n\n\tvar filter = rollupPluginutils.createFilter( options.include, options.exclude );\n\tdelete options.include;\n\tdelete options.exclude;\n\n\tif ( options.sourceMap !== false ) { options.sourceMaps = true; }\n\tif ( options.sourceMaps !== false ) { options.sourceMaps = true; }\n\tdelete options.sourceMap;\n\n\tvar runtimeHelpers = options.runtimeHelpers;\n\tdelete options.runtimeHelpers;\n\n\tvar externalHelpers;\n\tif ( options.externalHelpers ) { externalHelpers = true; }\n\tdelete options.externalHelpers;\n\n\tvar externalHelpersWhitelist = null;\n\tif ( options.externalHelpersWhitelist ) { externalHelpersWhitelist = options.externalHelpersWhitelist; }\n\tdelete options.externalHelpersWhitelist;\n\n\tvar warn = function (msg) { return console.warn(msg); }; // eslint-disable-line no-console\n\n\treturn {\n\t\tname: 'babel',\n\n\t\toptions: function options$1 ( options ) {\n\t\t\twarn = options.onwarn || warn;\n\t\t},\n\n\t\tresolveId: function resolveId ( id ) {\n\t\t\tif ( id === HELPERS ) { return id; }\n\t\t},\n\n\t\tload: function load ( id ) {\n\t\t\tif ( id === HELPERS ) {\n\t\t\t\tvar pattern = new RegExp( (\"babelHelpers\\\\.(\" + (keywordHelpers.join('|')) + \")\"), 'g' );\n\n\t\t\t\tvar helpers = babelCore.buildExternalHelpers( externalHelpersWhitelist, 'var' )\n\t\t\t\t\t.replace( pattern, 'var _$1' )\n\t\t\t\t\t.replace( /^babelHelpers\\./gm, 'export var ' ) +\n\t\t\t\t\t\"\\n\\nexport { \" + (keywordHelpers.map( function (word) { return (\"_\" + word + \" as \" + word); }).join( ', ')) + \" }\";\n\n\t\t\t\treturn helpers;\n\t\t\t}\n\t\t},\n\n\t\ttransform: function transform$1 ( code, id ) {\n\t\t\tif ( !filter( id ) ) { return null; }\n\t\t\tif ( id === HELPERS ) { return null; }\n\n\t\t\tvar helpers = preflightCheck( options, path.dirname( id ) );\n\t\t\tvar localOpts = assign({ filename: id }, options );\n\n\t\t\tvar transformed = babelCore.transform( code, localOpts );\n\t\t\tvar ref = transformed.metadata;\n\t\t\tvar usedHelpers = ref.usedHelpers;\n\n\t\t\tif ( usedHelpers.length ) {\n\t\t\t\tif ( helpers === BUNDLED ) {\n\t\t\t\t\tif ( !externalHelpers ) {\n\t\t\t\t\t\ttransformed.code += \"\\n\\nimport * as babelHelpers from '\" + HELPERS + \"';\";\n\t\t\t\t\t}\n\t\t\t\t} else if ( helpers === RUNTIME ) {\n\t\t\t\t\tif ( !runtimeHelpers ) {\n\t\t\t\t\t\tthrow new Error( 'Runtime helpers are not enabled. Either exclude the transform-runtime Babel plugin or pass the `runtimeHelpers: true` option. See https://github.com/rollup/rollup-plugin-babel#configuring-babel for more information' );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tusedHelpers.forEach( function (helper) {\n\t\t\t\t\t\tif ( inlineHelpers[ helper ] ) {\n\t\t\t\t\t\t\twarnOnce( warn, (\"The '\" + helper + \"' Babel helper is used more than once in your code. It's strongly recommended that you use the \\\"external-helpers\\\" plugin or the \\\"es2015-rollup\\\" preset. See https://github.com/rollup/rollup-plugin-babel#configuring-babel for more information\") );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tinlineHelpers[ helper ] = true;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tcode: transformed.code,\n\t\t\t\tmap: transformed.map\n\t\t\t};\n\t\t}\n\t};\n}\n\nmodule.exports = babel;\n//# sourceMappingURL=rollup-plugin-babel.cjs.js.map\n","/home/travis/build/npmtest/node-npmtest-rollup-plugin-babel/node_modules/rollup-plugin-babel/src/constants.js":"export const INLINE = {};\nexport const RUNTIME = {};\nexport const BUNDLED = {};\n\nexport const HELPERS = '\\0babelHelpers';\n","/home/travis/build/npmtest/node-npmtest-rollup-plugin-babel/node_modules/rollup-plugin-babel/src/index.js":"import { dirname } from 'path';\nimport { buildExternalHelpers, transform } from 'babel-core';\nimport { createFilter } from 'rollup-pluginutils';\nimport preflightCheck from './preflightCheck.js';\nimport { assign, warnOnce } from './utils.js';\nimport { RUNTIME, BUNDLED, HELPERS } from './constants.js';\n\nconst keywordHelpers = [ 'typeof', 'extends', 'instanceof' ];\n\nexport default function babel ( options ) {\n\toptions = assign( {}, options || {} );\n\tlet inlineHelpers = {};\n\n\tconst filter = createFilter( options.include, options.exclude );\n\tdelete options.include;\n\tdelete options.exclude;\n\n\tif ( options.sourceMap !== false ) options.sourceMaps = true;\n\tif ( options.sourceMaps !== false ) options.sourceMaps = true;\n\tdelete options.sourceMap;\n\n\tconst runtimeHelpers = options.runtimeHelpers;\n\tdelete options.runtimeHelpers;\n\n\tlet externalHelpers;\n\tif ( options.externalHelpers ) externalHelpers = true;\n\tdelete options.externalHelpers;\n\n\tlet externalHelpersWhitelist = null;\n\tif ( options.externalHelpersWhitelist ) externalHelpersWhitelist = options.externalHelpersWhitelist;\n\tdelete options.externalHelpersWhitelist;\n\n\tlet warn = msg => console.warn(msg); // eslint-disable-line no-console\n\n\treturn {\n\t\tname: 'babel',\n\n\t\toptions ( options ) {\n\t\t\twarn = options.onwarn || warn;\n\t\t},\n\n\t\tresolveId ( id ) {\n\t\t\tif ( id === HELPERS ) return id;\n\t\t},\n\n\t\tload ( id ) {\n\t\t\tif ( id === HELPERS ) {\n\t\t\t\tconst pattern = new RegExp( `babelHelpers\\\\.(${keywordHelpers.join('|')})`, 'g' );\n\n\t\t\t\tconst helpers = buildExternalHelpers( externalHelpersWhitelist, 'var' )\n\t\t\t\t\t.replace( pattern, 'var _$1' )\n\t\t\t\t\t.replace( /^babelHelpers\\./gm, 'export var ' ) +\n\t\t\t\t\t`\\n\\nexport { ${keywordHelpers.map( word => `_${word} as ${word}`).join( ', ')} }`;\n\n\t\t\t\treturn helpers;\n\t\t\t}\n\t\t},\n\n\t\ttransform ( code, id ) {\n\t\t\tif ( !filter( id ) ) return null;\n\t\t\tif ( id === HELPERS ) return null;\n\n\t\t\tconst helpers = preflightCheck( options, dirname( id ) );\n\t\t\tconst localOpts = assign({ filename: id }, options );\n\n\t\t\tconst transformed = transform( code, localOpts );\n\t\t\tconst { usedHelpers } = transformed.metadata;\n\n\t\t\tif ( usedHelpers.length ) {\n\t\t\t\tif ( helpers === BUNDLED ) {\n\t\t\t\t\tif ( !externalHelpers ) {\n\t\t\t\t\t\ttransformed.code += `\\n\\nimport * as babelHelpers from '${HELPERS}';`;\n\t\t\t\t\t}\n\t\t\t\t} else if ( helpers === RUNTIME ) {\n\t\t\t\t\tif ( !runtimeHelpers ) {\n\t\t\t\t\t\tthrow new Error( 'Runtime helpers are not enabled. Either exclude the transform-runtime Babel plugin or pass the `runtimeHelpers: true` option. See https://github.com/rollup/rollup-plugin-babel#configuring-babel for more information' );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tusedHelpers.forEach( helper => {\n\t\t\t\t\t\tif ( inlineHelpers[ helper ] ) {\n\t\t\t\t\t\t\twarnOnce( warn, `The '${helper}' Babel helper is used more than once in your code. It's strongly recommended that you use the \"external-helpers\" plugin or the \"es2015-rollup\" preset. See https://github.com/rollup/rollup-plugin-babel#configuring-babel for more information` );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tinlineHelpers[ helper ] = true;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tcode: transformed.code,\n\t\t\t\tmap: transformed.map\n\t\t\t};\n\t\t}\n\t};\n}\n","/home/travis/build/npmtest/node-npmtest-rollup-plugin-babel/node_modules/rollup-plugin-babel/src/preflightCheck.js":"import { join } from 'path';\nimport { assign } from './utils.js';\nimport { transform } from 'babel-core';\nimport { INLINE, RUNTIME, BUNDLED } from './constants.js';\nimport classes from 'babel-plugin-transform-es2015-classes';\n\nlet preflightCheckResults = {};\n\nexport default function preflightCheck ( options, dir ) {\n\tif ( !preflightCheckResults[ dir ] ) {\n\t\tlet helpers;\n\n\t\toptions = assign( {}, options );\n\t\tdelete options.only;\n\t\tdelete options.ignore;\n\n\t\toptions.filename = join( dir, 'x.js' );\n\n\t\toptions.plugins = options.plugins ? options.plugins.concat( classes ) : [ classes ];\n\n\t\tconst check = transform( 'export default class Foo {}', options ).code;\n\n\t\tif ( !~check.indexOf( 'export default' ) && !~check.indexOf( 'export { Foo as default }' ) ) throw new Error( 'It looks like your Babel configuration specifies a module transformer. Please disable it. See https://github.com/rollup/rollup-plugin-babel#configuring-babel for more information' );\n\n\t\tif ( ~check.indexOf( 'import _classCallCheck from' ) ) helpers = RUNTIME;\n\t\telse if ( ~check.indexOf( 'function _classCallCheck' ) ) helpers = INLINE;\n\t\telse if ( ~check.indexOf( 'babelHelpers' ) ) helpers = BUNDLED;\n\n\t\telse {\n\t\t\tthrow new Error( 'An unexpected situation arose. Please raise an issue at https://github.com/rollup/rollup-plugin-babel/issues. Thanks!' );\n\t\t}\n\n\t\tpreflightCheckResults[ dir ] = helpers;\n\t}\n\n\treturn preflightCheckResults[ dir ];\n}\n","/home/travis/build/npmtest/node-npmtest-rollup-plugin-babel/node_modules/rollup-plugin-babel/src/utils.js":"export function assign ( target, source ) {\n\tObject.keys( source ).forEach( key => {\n\t\ttarget[ key ] = source[ key ];\n\t});\n\treturn target;\n}\n\nlet warned = {};\nexport function warnOnce ( warn, msg ) {\n\tif ( warned[ msg ] ) return;\n\twarned[ msg ] = true;\n\twarn( msg );\n}\n"}